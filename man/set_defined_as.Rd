% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/symbol_map.R
\name{set_defined_as}
\alias{set_defined_as}
\title{Set Type a Symbol Is Defined As in a SymbolMap}
\usage{
set_defined_as(map, name, type, is_parameter = FALSE)
}
\arguments{
\item{map}{(SymbolMap) A map to modify.}

\item{name}{(character) The symbol whose entry should be modified.}

\item{type}{(Term | formula) The new 'defined as' type. Formulas are
automatically converted to types with \code{\link[typesys:formula_to_type]{typesys::formula_to_type()}}.}

\item{is_parameter}{(logical) Is this symbol a parameter?}
}
\value{
The updated \code{SymbolMap}.
}
\description{
This function sets the \code{defined_as} field in a \code{SymbolMap} entry.
}
\examples{
map = SymbolMap()

# Set 'x' defined as an Integer.
map = set_defined_as(map, "x", RInteger)

# Set 'length' defined as a function from ANY to Numeric.
#
# Type variables in the type indicate polymorphism. In this example, 'b' can
# be replaced by any type at each call site for 'length'.
map = set_defined_as(map, "length", b ~ RNumeric)
}
