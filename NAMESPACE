# Generated by roxygen2: do not edit by hand

S3method("[[",ConstraintSet)
S3method(apply_solution,"typesys::Call")
S3method(apply_solution,"typesys::Type")
S3method(apply_solution,"typesys::Union")
S3method(apply_solution,Constraint)
S3method(apply_solution,character)
S3method(apply_solution,list)
S3method(constrain_ast,Assign)
S3method(constrain_ast,Call)
S3method(constrain_ast,Character)
S3method(constrain_ast,Complex)
S3method(constrain_ast,Integer)
S3method(constrain_ast,Logical)
S3method(constrain_ast,Null)
S3method(constrain_ast,Numeric)
S3method(constrain_ast,Parameter)
S3method(constrain_ast,Phi)
S3method(constrain_ast,Replacement)
S3method(constrain_ast,Symbol)
S3method(constrain_ast,default)
S3method(constrain_ast,Brace)
S3method(infer_types,ControlFlowGraph)
S3method(infer_types,default)
S3method(infer_types,"{")
S3method(infer_types,"call")
S3method(infer_types,"function")
S3method(print,Constraint)
S3method(print,ConstraintSet)
S3method(print,SolutionSet)
S3method(print,Unresolved)
export(solve)
S3method(solve,ConstraintSet)
#S3method(unify,character)
export(.typeInfo)
export(Constraint)
export(ConstraintSet)
export(SolutionSet)
export(Unresolved)
export(constrain)
export(constrain_ast)
export(format.Constraint)
export(format.ConstraintSet)
export(format.SolutionSet)
export(infer_types)
export(return_type)
export(upcast_math)
importFrom(methods,is)
importFrom(utils,modifyList)
importMethodsFrom(typesys,element_type)
importMethodsFrom(typesys,format)
